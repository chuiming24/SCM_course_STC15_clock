C51 COMPILER V9.00   STAT                                                                  01/15/2017 00:16:22 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE STAT
OBJECT MODULE PLACED IN .\ouput\stat.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE allStat\stat.c BROWSE INCDIR(.\allBuffer;.\allStat) DEBUG OBJECTEXTEND PRIN
                    -T(.\ouput\stat.lst) OBJECT(.\ouput\stat.obj)

line level    source

   1          #define uint unsigned int
   2          #define uchar unsigned char
   3          #define u32 long unsigned int
   4          #include <STC15F2K60S2.H>
   5          #include <dsp.h>
   6          #include <stat.h>
   7          #include <key.h>
   8          
   9          
  10          enum stat nowStat = showTime;
  11          
  12          #include <showTime.h>
  13          #include <setTime.h>
  14          #include <setClockOne.h>
  15          #include <setClockTwo.h>
  16          #include <inWatch.h>
  17          #include <inDownWatch.h>
  18          
  19          
  20          
  21          //Cleck事件检查
  22          void cleckAll(){
  23   1          switch(nowStat){
  24   2              case showTime:
  25   2                  cleckShowTime();
  26   2                  break;
  27   2              case setTime:
  28   2                  break;
  29   2              case setClockOne:
  30   2                  break;
  31   2              case setClockTwo:
  32   2                  break;
  33   2              case inWatch:
  34   2                  break;
  35   2              case inDownWatch:
  36   2                  break;
  37   2          }
  38   1      }
  39          
  40          //Jump跳转函数
  41          void jumpAll(){
  42   1          switch(nowStat){
  43   2              case showTime:
  44   2                  jumpShowTime();
  45   2                  break;
  46   2              case setTime:
  47   2                  jumpSetTime();
  48   2                  break;
  49   2              case setClockOne:
  50   2                  jumpSetClockOne();
  51   2                  break;
  52   2              case setClockTwo:
  53   2                  jumpSetClockTwo();
  54   2                  break;
C51 COMPILER V9.00   STAT                                                                  01/15/2017 00:16:22 PAGE 2   

  55   2              case inWatch:
  56   2                  jumpinWatch();
  57   2                  break;
  58   2              case inDownWatch:
  59   2                  jumpinDownWatch();
  60   2                  break;
  61   2          }
  62   1      }
  63          
  64          //Time时间函数
  65          
  66          void timeAll(){
  67   1          timeShowTime();
  68   1          switch(nowStat){
  69   2              case showTime:
  70   2                  break;
  71   2              case setTime:
  72   2                  break;
  73   2              case setClockOne:
  74   2                  break;
  75   2              case setClockTwo:
  76   2                  break;
  77   2              case inWatch:
  78   2                  timeinWatch();
  79   2                  break;
  80   2              case inDownWatch:
  81   2                  timeinDownWatch();
  82   2                  break;
  83   2          }
  84   1      }
  85          
  86          //dsp显示函数
  87          void dspAll(){
  88   1          switch(nowStat){
  89   2              case showTime:
  90   2                  dspShowTime(nowSec, nowMin, nowHour);
  91   2                  break;
  92   2              case setTime:
  93   2                  dspSetTime();
  94   2                  break;
  95   2              case setClockOne:
  96   2                  dspSetClockOne();
  97   2                  break;
  98   2              case setClockTwo:
  99   2                  dspSetClockTwo();
 100   2                  break;
 101   2              case inWatch:
 102   2                  dspinWatch();
 103   2                  break;
 104   2              case inDownWatch:
 105   2                  dspinDownWatch();
 106   2                  break;
 107   2          }
 108   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    115    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
C51 COMPILER V9.00   STAT                                                                  01/15/2017 00:16:22 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
